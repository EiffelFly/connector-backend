version: "3.9"

networks:
  default:
    name: instill-network

services:
  connector_backend_migrate:
    container_name: connector-backend-migrate
    build:
      context: .
    image: instill/connector-backend:dev
    restart: on-failure
    environment:
      CFG_DATABASE_HOST: pg_sql
      CFG_DATABASE_PORT: 5432
      CFG_DATABASE_USERNAME: postgres
      CFG_DATABASE_PASSWORD: password
    volumes:
      - ./configs:/connector-backend/configs
    entrypoint: ./connector-backend-migrate
    depends_on:
      pg_sql:
        condition: service_healthy

  connector_backend_init:
    container_name: connector-backend-init
    build:
      context: .
    image: instill/connector-backend:dev
    restart: on-failure
    environment:
      CFG_DATABASE_HOST: pg_sql
      CFG_DATABASE_PORT: 5432
      CFG_DATABASE_USERNAME: postgres
      CFG_DATABASE_PASSWORD: password
    volumes:
      - ./configs:/connector-backend/configs
    entrypoint: ./connector-backend-init
    depends_on:
      - connector_backend_migrate

  connector_backend:
    container_name: connector-backend
    build:
      context: .
    image: instill/connector-backend:dev
    restart: unless-stopped
    environment:
      CFG_SERVER_PORT: 8082
      CFG_DATABASE_HOST: pg_sql
      CFG_DATABASE_PORT: 5432
      CFG_DATABASE_USERNAME: postgres
      CFG_DATABASE_PASSWORD: password
    ports:
      - 8082:8082
    volumes:
      - ./configs:/connector-backend/configs
    depends_on:
      - connector_backend_init

  pg_sql:
    container_name: pg-sql
    image: postgres:14.1-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      timeout: 20s
      retries: 10

version: "3.9"

networks:
  default:
    name: instill-network

volumes:
  conenctor_config:
    name: connector-config

services:
  mgmt_backend_migrate:
    container_name: mgmt-backend-migrate
    build:
      context: .
    image: instill/mgmt-backend:dev
    restart: on-failure
    environment:
      CFG_DATABASE_HOST: pg_sql
      CFG_DATABASE_PORT: 5432
      CFG_DATABASE_USERNAME: postgres
      CFG_DATABASE_PASSWORD: password
    entrypoint: ./mgmt-backend-migrate
    depends_on:
      pg_sql:
        condition: service_healthy

  mgmt_backend_init:
    container_name: mgmt-backend-init
    build:
      context: .
    image: instill/mgmt-backend:dev
    restart: on-failure
    environment:
      CFG_DATABASE_HOST: pg_sql
      CFG_DATABASE_PORT: 5432
      CFG_DATABASE_USERNAME: postgres
      CFG_DATABASE_PASSWORD: password
    entrypoint: ./mgmt-backend-init
    depends_on:
      - mgmt_backend_migrate

  mgmt_backend:
    container_name: mgmt-backend
    build:
      context: .
    image: instill/mgmt-backend:dev
    restart: unless-stopped
    environment:
      CFG_SERVER_PORT: 8080
      CFG_DATABASE_HOST: pg_sql
      CFG_DATABASE_PORT: 5432
      CFG_DATABASE_USERNAME: postgres
      CFG_DATABASE_PASSWORD: password
    ports:
      - 8080:8080
    depends_on:
      - mgmt_backend_init

  connector_backend_migrate:
    container_name: connector-backend-migrate
    build:
      context: .
    image: instill/connector-backend:dev
    restart: on-failure
    environment:
      CFG_DATABASE_HOST: pg_sql
      CFG_DATABASE_PORT: 5432
      CFG_DATABASE_USERNAME: postgres
      CFG_DATABASE_PASSWORD: password
    volumes:
      - ./config:/connector-backend/config
    entrypoint: ./connector-backend-migrate
    depends_on:
      pg_sql:
        condition: service_healthy

  connector_backend_init:
    container_name: connector-backend-init
    build:
      context: .
    image: instill/connector-backend:dev
    restart: on-failure
    environment:
      CFG_DATABASE_HOST: pg_sql
      CFG_DATABASE_PORT: 5432
      CFG_DATABASE_USERNAME: postgres
      CFG_DATABASE_PASSWORD: password
    volumes:
      - ./config:/connector-backend/config
    entrypoint: ./connector-backend-init
    depends_on:
      - connector_backend_migrate

  connector_backend_worker:
    container_name: connector-backend-worker
    build:
      context: .
    image: instill/connector-backend:dev
    restart: on-failure
    environment:
      CFG_DATABASE_HOST: pg_sql
      CFG_DATABASE_PORT: 5432
      CFG_DATABASE_USERNAME: postgres
      CFG_DATABASE_PASSWORD: password
      CFG_TEMPORAL_CLIENTOPTIONS_HOSTPORT: temporal:7233
    volumes:
      - conenctor_config:/connector-config
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config:/connector-backend/config
    entrypoint: ./connector-backend-worker
    depends_on:
      - connector_backend_init
      - temporal

  connector_backend:
    container_name: connector-backend
    build:
      context: .
    image: instill/connector-backend:dev
    restart: unless-stopped
    environment:
      CFG_SERVER_PORT: 8082
      CFG_DATABASE_HOST: pg_sql
      CFG_DATABASE_PORT: 5432
      CFG_DATABASE_USERNAME: postgres
      CFG_DATABASE_PASSWORD: password
      CFG_MGMTBACKEND_HOST: mgmt_backend
      CFG_MGMTBACKEND_PORT: 8080
      CFG_TEMPORAL_CLIENTOPTIONS_HOSTPORT: temporal:7233
    ports:
      - 8082:8082
    volumes:
      - ./config:/connector-backend/config
    depends_on:
      - connector_backend_worker

  pg_sql:
    container_name: pg-sql
    image: postgres:${POSTGRESQL_VERSION}-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      timeout: 20s
      retries: 10

  temporal:
    container_name: temporal
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    restart: unless-stopped
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=password
      - POSTGRES_SEEDS=pg_sql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
    ports:
      - 7233:7233
    depends_on:
      pg_sql:
        condition: service_healthy

  temporal_admin_tools:
    container_name: temporal-admin-tools
    image: temporalio/admin-tools:${TEMPORAL_VERSION}
    restart: unless-stopped
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    stdin_open: true
    tty: true
    depends_on:
      - temporal

  temporal_ui:
    container_name: temporal-ui
    image: temporalio/ui:${TEMPORAL_UI_VERSION}
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    ports:
      - 8088:8080
    depends_on:
      - temporal
